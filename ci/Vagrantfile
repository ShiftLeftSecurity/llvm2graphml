Vagrant.require_version ">= 1.7.0"

def configure_vm(name, config)
  config.vm.provider "virtualbox" do |v|
    v.memory = (ENV['VM_MEM'] || 4096).to_i
    v.cpus = (ENV['VM_CPU'] || 2).to_i
    v.name = "llvm2graphml-#{name}"
  end
end

Vagrant.configure(2) do |config|

  config.vm.define "ubuntu18" do |cfg|
    cfg.vm.box = "ubuntu/bionic64"
    cfg.ssh.insert_key = false
    cfg.ssh.forward_agent = true

    configure_vm("ubuntu18", cfg)

    cfg.vm.provision "shell", inline: "apt-get install -y python3"
    cfg.vm.provision "ansible" do |ansible|
      ansible.verbose = "v"
      ansible.playbook = "ubuntu-playbook.yaml"
      ansible.extra_vars = {
        llvm_version: ENV['LLVM_VERSION'] || '9.0.0',
        gitref: ENV['GITREF'] || 'master',
      }
    end
  end

  config.vm.define "macos" do |cfg|
    cfg.vm.box = "yzgyyang/macOS-10.14"
    cfg.ssh.insert_key = false
    cfg.ssh.forward_agent = true

    configure_vm("macOS", cfg)

    cfg.vm.synced_folder ".", "/vagrant", disabled: true
    cfg.vm.provision "ansible" do |ansible|
      ansible.verbose = "v"
      ansible.playbook = "macos-playbook.yaml"
      ansible.extra_vars = {
        llvm_version: ENV['LLVM_VERSION'] || '9.0.0',
        gitref: ENV['GITREF'] || 'master',
      }
    end
  end

end